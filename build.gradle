apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'idea'


configurations { deployerJars }

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	groovy 'org.codehaus.groovy:groovy-all:2.1.0'
	testCompile 'xmlunit:xmlunit:1.3'
	testCompile 'junit:junit:4.11'
	testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'

	deployerJars 'org.apache.maven.wagon:wagon-webdav:1.0-beta-2'
}

// MetaInfo
group = 'groovytools.builder'
def versionBase = '2.0.0'
//default artifact name is defined in settings.gradle

defaultTasks('check')

// handles releases gracefully
gradle.taskGraph.whenReady {taskGraph ->
	if (taskGraph.hasTask(':release')) {
		version = versionBase
	} else {
		version = versionBase + '-SNAPSHOT'
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

task writePom {
	doLast {
		pom {
		}.writeTo("build/classes/main/META-INF/maven/${project.group}/${project.name}/pom.xml")
	}
}

afterEvaluate {
	getTasksByName('jar', false)*.dependsOn('writePom')
}

def env = System.getenv()
def cloudbeesUsername = env['CLOUDBEES_JENKINS_USER']
def cloudbeesPassword = env['CLOUDBEES_JENKINS_PASSWORD']
def cloudbeesAccountName = env['CLOUDBEES_JENKINS_ACCOUNT']

uploadArchives {
	repositories.mavenDeployer {
		// you might use this configuration not to generate
		// date based artefact names
		// uniqueVersion = false
		def configureAuth = {
			authentication(userName: cloudbeesUsername, password: cloudbeesPassword)
		}
		configuration = configurations.deployerJars
		snapshotRepository(url: "dav:https://repository-${cloudbeesAccountName}.forge.cloudbees.com/snapshot/", configureAuth)
		repository(url: "dav:https://repository-${cloudbeesAccountName}.forge.cloudbees.com/release/", configureAuth)
	}
}

task release (dependsOn:['build', 'javadoc', 'uploadArchives'], description: 'Combines all tasks for a release') {
	
}

//just needed to create or update the gradlew wrapper, irrelevant for the build otherwise
task wrapper(type: Wrapper) { gradleVersion = '1.4' }
